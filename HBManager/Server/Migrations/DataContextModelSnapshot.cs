// <auto-generated />
using System;
using HBManager.Server;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HBManager.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConsumerProduct", b =>
                {
                    b.Property<int>("ConsumersID")
                        .HasColumnType("int");

                    b.Property<int>("ProductsID")
                        .HasColumnType("int");

                    b.HasKey("ConsumersID", "ProductsID");

                    b.HasIndex("ProductsID");

                    b.ToTable("ConsumerProduct");
                });

            modelBuilder.Entity("HBManager.Shared.Consumer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ColorIndex")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Consumers");
                });

            modelBuilder.Entity("HBManager.Shared.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("IsFavorited")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductTypeID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ShoppingListID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProductTypeID");

                    b.HasIndex("ShoppingListID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("HBManager.Shared.ProductType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ColorIndex")
                        .HasColumnType("int");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("ID");

                    b.ToTable("ProductTypes");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Obst"
                        },
                        new
                        {
                            ID = 2,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Gemüse"
                        },
                        new
                        {
                            ID = 3,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Fleisch & Fisch"
                        },
                        new
                        {
                            ID = 4,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Fleisch (Bio)"
                        },
                        new
                        {
                            ID = 5,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Käse"
                        },
                        new
                        {
                            ID = 6,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Eier & Milch"
                        },
                        new
                        {
                            ID = 7,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Spezialitäten & Feinkost"
                        },
                        new
                        {
                            ID = 8,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Gebäck"
                        },
                        new
                        {
                            ID = 9,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Heißgetränke"
                        },
                        new
                        {
                            ID = 10,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Nudeln, Reis & Co"
                        },
                        new
                        {
                            ID = 11,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Saucen, Öle & Gewürze"
                        },
                        new
                        {
                            ID = 12,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Fertiggerichte & Konserven"
                        },
                        new
                        {
                            ID = 13,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Tiefkühl"
                        },
                        new
                        {
                            ID = 14,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Backen & Dessert"
                        },
                        new
                        {
                            ID = 15,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Süßes & Salziges"
                        },
                        new
                        {
                            ID = 16,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Getränke"
                        },
                        new
                        {
                            ID = 17,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Getränke (alkoholisch)"
                        },
                        new
                        {
                            ID = 18,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Drogerie"
                        },
                        new
                        {
                            ID = 19,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Baby & Kind"
                        },
                        new
                        {
                            ID = 20,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Haushalt"
                        },
                        new
                        {
                            ID = 21,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Tier"
                        },
                        new
                        {
                            ID = 22,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Kleidung"
                        },
                        new
                        {
                            ID = 23,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Elektronik"
                        },
                        new
                        {
                            ID = 24,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Wurst & Aufstriche"
                        },
                        new
                        {
                            ID = 512,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Sonstige"
                        });
                });

            modelBuilder.Entity("HBManager.Shared.Retailer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ColorIndex")
                        .HasColumnType("int");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("ID");

                    b.ToTable("Retailers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Aldi Nord"
                        },
                        new
                        {
                            ID = 2,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Aldi Süd"
                        },
                        new
                        {
                            ID = 3,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "DM"
                        },
                        new
                        {
                            ID = 4,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "EDEKA"
                        },
                        new
                        {
                            ID = 5,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Globus"
                        },
                        new
                        {
                            ID = 6,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Kaufland"
                        },
                        new
                        {
                            ID = 7,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Lidl"
                        },
                        new
                        {
                            ID = 8,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Metro"
                        },
                        new
                        {
                            ID = 9,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Müller"
                        },
                        new
                        {
                            ID = 10,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Netto"
                        },
                        new
                        {
                            ID = 11,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Norma"
                        },
                        new
                        {
                            ID = 12,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Penny"
                        },
                        new
                        {
                            ID = 13,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Picnic"
                        },
                        new
                        {
                            ID = 14,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Real"
                        },
                        new
                        {
                            ID = 15,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Rewe"
                        },
                        new
                        {
                            ID = 16,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Rossmann"
                        },
                        new
                        {
                            ID = 17,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Spar"
                        },
                        new
                        {
                            ID = 18,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Trinkgut"
                        },
                        new
                        {
                            ID = 19,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Trink & Spare"
                        },
                        new
                        {
                            ID = 512,
                            Color = "",
                            ColorIndex = 0,
                            ImageURL = "",
                            Name = "Sonstige"
                        });
                });

            modelBuilder.Entity("HBManager.Shared.ShoppingList", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("Date");

                    b.Property<int>("RetailerID")
                        .HasColumnType("int");

                    b.Property<int>("ShoppingListCatalogID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RetailerID");

                    b.HasIndex("ShoppingListCatalogID");

                    b.ToTable("ShoppingLists");
                });

            modelBuilder.Entity("HBManager.Shared.ShoppingListCatalog", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Budget")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("Date");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("ShoppingListCatalogs");
                });

            modelBuilder.Entity("HBManager.Shared.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("LastOnlineDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreationDate = new DateTime(2023, 9, 10, 3, 14, 42, 84, DateTimeKind.Local).AddTicks(1276),
                            LastOnlineDate = new DateTime(2023, 9, 10, 3, 14, 42, 84, DateTimeKind.Local).AddTicks(1277),
                            Name = "helmut",
                            PasswordHash = "$2a$11$cC2HGDVdEjiqn0i/zFD16.phjapeXJDtQo0LlcoEmI5/aGYkEdCVq",
                            Role = "User"
                        },
                        new
                        {
                            ID = 2,
                            CreationDate = new DateTime(2023, 9, 10, 3, 14, 42, 84, DateTimeKind.Local).AddTicks(1280),
                            LastOnlineDate = new DateTime(2023, 9, 10, 3, 14, 42, 84, DateTimeKind.Local).AddTicks(1281),
                            Name = "helmut2",
                            PasswordHash = "$2a$11$oxFGwhEGy.7meEYttK9jwusPG9Ydx7v3WsASKdllv2FDTWl30jqxm",
                            Role = "User"
                        },
                        new
                        {
                            ID = 3,
                            CreationDate = new DateTime(2023, 9, 10, 3, 14, 42, 84, DateTimeKind.Local).AddTicks(1284),
                            LastOnlineDate = new DateTime(2023, 9, 10, 3, 14, 42, 84, DateTimeKind.Local).AddTicks(1285),
                            Name = "Ingeborg-HHB",
                            PasswordHash = "$2a$11$oxFGwhEGy.7meEYttK9jwusPG9Ydx7v3WsASKdllv2FDTWl30jqxm",
                            Role = "User"
                        });
                });

            modelBuilder.Entity("ConsumerProduct", b =>
                {
                    b.HasOne("HBManager.Shared.Consumer", null)
                        .WithMany()
                        .HasForeignKey("ConsumersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HBManager.Shared.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HBManager.Shared.Product", b =>
                {
                    b.HasOne("HBManager.Shared.ProductType", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HBManager.Shared.ShoppingList", "ShoppingList")
                        .WithMany("Products")
                        .HasForeignKey("ShoppingListID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductType");

                    b.Navigation("ShoppingList");
                });

            modelBuilder.Entity("HBManager.Shared.ShoppingList", b =>
                {
                    b.HasOne("HBManager.Shared.Retailer", "Retailer")
                        .WithMany()
                        .HasForeignKey("RetailerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HBManager.Shared.ShoppingListCatalog", "ShoppingListCatalog")
                        .WithMany("ShoppingLists")
                        .HasForeignKey("ShoppingListCatalogID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Retailer");

                    b.Navigation("ShoppingListCatalog");
                });

            modelBuilder.Entity("HBManager.Shared.ShoppingList", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("HBManager.Shared.ShoppingListCatalog", b =>
                {
                    b.Navigation("ShoppingLists");
                });
#pragma warning restore 612, 618
        }
    }
}
