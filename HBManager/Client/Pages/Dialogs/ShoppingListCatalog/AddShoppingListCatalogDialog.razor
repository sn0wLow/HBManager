@inject IDialogService DialogService
@inject IShoppingListCatalogService ShoppingListCatalogService
@inject ISnackbar Snackbar
@namespace HBManager.Client

<MudDialog>



    <TitleContent>
        <MudText Typo="Typo.h6" Class="me-5">
            <MudIcon Icon="@Icons.Material.Filled.Add" Class="mr-3 mb-n1" />
                Einkaufskatalog hinzufügen
        </MudText>
    </TitleContent>
    <DialogContent>
        <EditForm Model="@shoppingListCatalogDTO" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator />
            <MudNumericField T="int" @bind-Value="@shoppingListCatalogDTO.Budget"
                             For="@(() => shoppingListCatalogDTO.Budget)" Min="1"
                             Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.EuroSymbol" AdornmentColor="Color.Success"
                             Label="@($"Monatsbudget für {new DateTime(2023, PickedMonth, 01).ToString("MMMM")}, {@PickedYear}")"
                             Class="mb-5" Variant="Variant.Filled" />

            <div class="px-1 py-2 d-flex justify-content-end">
                <MudButton Color="Color.Tertiary" ButtonType="ButtonType.Submit">Einkauf hinzufügen</MudButton>
                <MudButton OnClick="Close" Class="ms-1">Schließen</MudButton>
            </div>
        </EditForm>
    </DialogContent>
</MudDialog>
@code {
    [CascadingParameter]
    public required MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public required List<ShoppingListCatalog> LocalShoppingListCatalogs { get; set; }

    [Parameter]
    public int PickedYear { get; set; }

    [Parameter]
    public int PickedMonth { get; set; }

    private ShoppingListCatalogAddDTO shoppingListCatalogDTO = new ShoppingListCatalogAddDTO();

    private bool processing = false;

    protected override void OnInitialized()
    {
        shoppingListCatalogDTO.Date = new DateTime(PickedYear, PickedMonth, 1);
    }


    private void Close() => MudDialog?.Cancel();
    private async Task OnValidSubmit(EditContext context)
    {
        if (processing)
        {
            return;
        }

        processing = true;

        var result = await ShoppingListCatalogService.AddShoppingListCatalog(shoppingListCatalogDTO);

        if (!result.Success)
        {
            Snackbar.Add($"{result.Message}", Severity.Error);
            processing = false;
            return;
        }

        var newShoppingListCatalog = result.Data!;

        LocalShoppingListCatalogs.Add(newShoppingListCatalog);

        Snackbar.Add("Einkaufskatalog hinzugefügt", Severity.Success);
        MudDialog!.Close(DialogResult.Ok(true));
        processing = false;
    }
}
