@inject IDialogService DialogService
@inject IShoppingListCatalogService ShoppingListCatalogService
@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager

@namespace HBManager.Client

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6" Class="me-5">
            <MudIcon Icon="@Icons.Material.Filled.DeleteForever" Class="mr-3 mb-n1" />
            Einkaufskatalog entfernen?
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudText Typo="Typo.body1">
            @DeleteCatalogButtonText()
        </MudText>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Error" OnClick="Delete">Einkaufskatalog entfernen</MudButton>
        <MudButton OnClick="Close">Abbrechen</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter]
    public required MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public required ShoppingListCatalog ShoppingListCatalogToDelete { get; set; }

    private void Close() => MudDialog.Cancel();

    private async Task Delete()
    {
        var result = await ShoppingListCatalogService.DeleteShoppingListCatalog(ShoppingListCatalogToDelete.ID);

        if (!result.Success)
        {
            Snackbar.Add($"{result.Message}", Severity.Error);
            return;
        }

        Snackbar.Add($"Einkaufskatalog entfernt", Severity.Info);

        MudDialog!.Close(DialogResult.Ok(true));
        NavigationManager.NavigateTo("shoppinglists");
    }

    private string DeleteCatalogButtonText()
    {
        string dateFormatted = $"{ShoppingListCatalogToDelete.Date.ToString("MMMM")}, {ShoppingListCatalogToDelete.Date.Year}";

        if (ShoppingListCatalogToDelete.ShoppingLists.Count() > 0)
        {
            int amountShoppingLists = ShoppingListCatalogToDelete.ShoppingLists.Count();

            if (ShoppingListCatalogToDelete.ShoppingLists.Any(x => x.Products.Count() > 0))
            {
                int sumProducts = ShoppingListCatalogToDelete.ShoppingLists.Sum(x => x.Products.Count());

                return $"Einkaufskatalog vom {dateFormatted} samt {amountShoppingLists} Einkäufe und {sumProducts} Produkt(e) entfernen?";
            }
            else
            {
                return $"Einkaufskatalog vom {dateFormatted} samt {amountShoppingLists} Einkäufe entfernen?";
            }

        }
        else
        {
            return $"Einkaufskatalog vom {dateFormatted} entfernen?";
        }
    }
}



