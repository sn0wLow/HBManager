@inject IDialogService DialogService
@inject IShoppingListService ShoppingListService
@inject ISnackbar Snackbar
@namespace HBManager.Client

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6" Class="me-5">
            <MudIcon Icon="@Icons.Material.Filled.DeleteForever" Class="mr-3 mb-n1" />
            Produkt entfernen?
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudText Typo="Typo.body1">Produkt <strong>@ProductToDelete.Title</strong> (@(ProductToDelete.Price) €) entfernen?</MudText>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Error" OnClick="Delete">Produkt entfernen</MudButton>
        <MudButton OnClick="Close">Abbrechen</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter]
    public required MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public required List<Product> LocalProducts { get; set; }
    [Parameter]
    public required Product ProductToDelete { get; set; }

    private void Close() => MudDialog.Cancel();

    private async Task Delete()
    {
        var result = await ShoppingListService.DeleteProduct(ProductToDelete.ID);

        if (!result.Success)
        {
            Snackbar.Add($"{result.Message}", Severity.Error);
            return;
        }

        Snackbar.Add($"Produkt entfernt", Severity.Info);

        LocalProducts.Remove(LocalProducts.Find(x => x.ID == ProductToDelete.ID)!);
        MudDialog!.Close(DialogResult.Ok(true));
    }
}
