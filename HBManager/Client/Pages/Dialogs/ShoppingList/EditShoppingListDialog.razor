@inject IDialogService DialogService
@inject IShoppingListService ShoppingListService
@inject IRetailerService RetailerService
@inject ISnackbar Snackbar
@namespace HBManager.Client

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6" Class="me-5">
            <MudIcon Icon="@Icons.Material.Filled.Edit" Class="mr-3 mb-n1" />
            Einkauf bearbeiten
        </MudText>
    </TitleContent>
    <DialogContent>
        @if (loading)
        {
            <MudStack AlignItems="AlignItems.Center" Class="py-5">
                <MudProgressCircular Color="Color.Info" Indeterminate="true" Size="Size.Large" />
                <MudText>Lade Daten</MudText>
            </MudStack>
        }
        else
        {
            <EditForm Model="@shoppingListDTO" OnValidSubmit="OnValidSubmit">
                <DataAnnotationsValidator />

                <MudDatePicker Label="Datum des Einkaufes" Color="Color.Info" 
                HelperText="@pickedDate?.ToShortDateString()" @bind-Date="pickedDate" 
                FixYear="@ShoppingListToEdit.Date.Year" FixMonth="@ShoppingListToEdit.Date.Month" DateFormat="dd"
                Class="mb-5" Variant="Variant.Filled" />

                <MudSelect T="int" Label="Händler" @bind-Value="shoppingListDTO.RetailerID"
                       Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Store" AdornmentColor="Color.Default"
                       AnchorOrigin="Origin.BottomCenter" Class="mb-5" Variant="Variant.Filled">
                    @foreach (var retailer in RetailerService.Retailers)
                    {
                        <MudSelectItem Value="retailer.ID">@retailer.Name</MudSelectItem>
                    }
                </MudSelect>


                <div class="px-1 py-2 d-flex justify-content-end">
                    <MudButton Color="Color.Primary" ButtonType="ButtonType.Submit">Einkauf bearbeiten</MudButton>
                    <MudButton OnClick="Close" Class="ms-1">Schließen</MudButton>
                </div>
            </EditForm>
        }
    </DialogContent>
</MudDialog>
@code {
    [CascadingParameter]
    public required MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public required ShoppingListCatalog LocalShoppingListCatalog { get; set; }

    [Parameter]
    public required ShoppingList ShoppingListToEdit { get; set; }

    private ShoppingListEditDTO shoppingListDTO = new ShoppingListEditDTO();

    private DateTime? pickedDate;
    private bool loading;
    private bool processing = false;

    protected override async Task OnInitializedAsync()
    {
        loading = true;
        await RetailerService.GetRetailersAsync();

        shoppingListDTO.ID = ShoppingListToEdit.ID;
        shoppingListDTO.RetailerID = ShoppingListToEdit.RetailerID;
        pickedDate = ShoppingListToEdit.Date;
        loading = false;
    }


    private void Close() => MudDialog?.Cancel();
    private async Task OnValidSubmit(EditContext context)
    {
        if (processing)
        {
            return;
        }

        processing = true;

        shoppingListDTO.Date = new DateTime(pickedDate!.Value.Year, pickedDate.Value.Month, pickedDate.Value.Day);

        var result = await ShoppingListService.EditShoppingList(shoppingListDTO);

        if (!result.Success)
        {
            Snackbar.Add($"{result.Message}", Severity.Error);
            processing = false;
            return;
        }

        var editedShoppingList = result.Data!;
        ShoppingListToEdit.Date = editedShoppingList.Date;
        ShoppingListToEdit.RetailerID = editedShoppingList.RetailerID;

        Snackbar.Add("Einkauf bearbeitet", Severity.Info);
        MudDialog!.Close(DialogResult.Ok(true));
        processing = false;
    }
}
